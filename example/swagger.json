{
  "openapi": "3.0.2",
  "info": {
    "title": "Express Meta Guard Example API",
    "version": "1.0.2",
    "description": "This is a sample Book Store project written in ExpressJS that uses Express Meta Guard and Express Route Parser to generate OpenAPI-format documentation.",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "externalDocs": {
    "description": "Find out more about Express Meta Guard",
    "url": "https://github.com/Verdocs/express-meta-guard"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "tags": [
    {
      "name": "Books",
      "description": "Entries related to books"
    }
  ],
  "paths": {
    "/books": {
      "get": {
        "tags": [
          "Books"
        ],
        "description": "Get a list of the books in the system.",
        "operationId": "getBooks",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 999999,
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Books"
        ],
        "description": "Create a book.",
        "operationId": "createBook",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "author": {
                    "type": "string"
                  }
                },
                "required": [
                  "title",
                  "author"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Book": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1004
          },
          "title": {
            "type": "string",
            "example": "A Wrinkle in Time"
          },
          "author": {
            "type": "string",
            "example": "Madeleine L'Engle"
          }
        }
      }
    },
    "responses": {
      "IllegalInput": {
        "description": "Illegal input for operation."
      },
      "NotFound": {
        "description": "Entity not found."
      }
    }
  }
}